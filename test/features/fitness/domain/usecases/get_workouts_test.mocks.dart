// Mocks generated by Mockito 5.4.5 from annotations
// in fitness_tracker_app/test/features/fitness/domain/usecases/get_workouts_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:fitness_tracker_app/core/utils/result.dart' as _i2;
import 'package:fitness_tracker_app/features/fitness/domain/entities/fitness_goals.dart'
    as _i7;
import 'package:fitness_tracker_app/features/fitness/domain/entities/user_profile.dart'
    as _i6;
import 'package:fitness_tracker_app/features/fitness/domain/entities/water_intake.dart'
    as _i8;
import 'package:fitness_tracker_app/features/fitness/domain/entities/workout.dart'
    as _i5;
import 'package:fitness_tracker_app/features/fitness/domain/repositories/fitness_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResult_0<T> extends _i1.SmartFake implements _i2.Result<T> {
  _FakeResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FitnessRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFitnessRepository extends _i1.Mock implements _i3.FitnessRepository {
  MockFitnessRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Result<List<_i5.Workout>>> getWorkouts() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWorkouts,
          [],
        ),
        returnValue: _i4.Future<_i2.Result<List<_i5.Workout>>>.value(
            _FakeResult_0<List<_i5.Workout>>(
          this,
          Invocation.method(
            #getWorkouts,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Result<List<_i5.Workout>>>);

  @override
  _i4.Future<_i2.Result<_i5.Workout>> saveWorkout(_i5.Workout? workout) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWorkout,
          [workout],
        ),
        returnValue: _i4.Future<_i2.Result<_i5.Workout>>.value(
            _FakeResult_0<_i5.Workout>(
          this,
          Invocation.method(
            #saveWorkout,
            [workout],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i5.Workout>>);

  @override
  _i4.Future<_i2.Result<void>> deleteWorkout(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteWorkout,
          [id],
        ),
        returnValue: _i4.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #deleteWorkout,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Result<void>>);

  @override
  _i4.Future<_i2.Result<List<_i5.Workout>>> getWorkoutsByDateRange(
    DateTime? start,
    DateTime? end,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWorkoutsByDateRange,
          [
            start,
            end,
          ],
        ),
        returnValue: _i4.Future<_i2.Result<List<_i5.Workout>>>.value(
            _FakeResult_0<List<_i5.Workout>>(
          this,
          Invocation.method(
            #getWorkoutsByDateRange,
            [
              start,
              end,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Result<List<_i5.Workout>>>);

  @override
  _i4.Future<_i2.Result<_i5.Workout?>> getTodayWorkout() => (super.noSuchMethod(
        Invocation.method(
          #getTodayWorkout,
          [],
        ),
        returnValue: _i4.Future<_i2.Result<_i5.Workout?>>.value(
            _FakeResult_0<_i5.Workout?>(
          this,
          Invocation.method(
            #getTodayWorkout,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i5.Workout?>>);

  @override
  _i4.Future<_i2.Result<_i6.UserProfile?>> getUserProfile() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserProfile,
          [],
        ),
        returnValue: _i4.Future<_i2.Result<_i6.UserProfile?>>.value(
            _FakeResult_0<_i6.UserProfile?>(
          this,
          Invocation.method(
            #getUserProfile,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i6.UserProfile?>>);

  @override
  _i4.Future<_i2.Result<_i6.UserProfile>> saveUserProfile(
          _i6.UserProfile? profile) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveUserProfile,
          [profile],
        ),
        returnValue: _i4.Future<_i2.Result<_i6.UserProfile>>.value(
            _FakeResult_0<_i6.UserProfile>(
          this,
          Invocation.method(
            #saveUserProfile,
            [profile],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i6.UserProfile>>);

  @override
  _i4.Future<_i2.Result<void>> deleteUserProfile() => (super.noSuchMethod(
        Invocation.method(
          #deleteUserProfile,
          [],
        ),
        returnValue: _i4.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #deleteUserProfile,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Result<void>>);

  @override
  _i4.Future<_i2.Result<_i7.FitnessGoals?>> getFitnessGoals() =>
      (super.noSuchMethod(
        Invocation.method(
          #getFitnessGoals,
          [],
        ),
        returnValue: _i4.Future<_i2.Result<_i7.FitnessGoals?>>.value(
            _FakeResult_0<_i7.FitnessGoals?>(
          this,
          Invocation.method(
            #getFitnessGoals,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i7.FitnessGoals?>>);

  @override
  _i4.Future<_i2.Result<_i7.FitnessGoals>> saveFitnessGoals(
          _i7.FitnessGoals? goals) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveFitnessGoals,
          [goals],
        ),
        returnValue: _i4.Future<_i2.Result<_i7.FitnessGoals>>.value(
            _FakeResult_0<_i7.FitnessGoals>(
          this,
          Invocation.method(
            #saveFitnessGoals,
            [goals],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i7.FitnessGoals>>);

  @override
  _i4.Future<_i2.Result<void>> deleteFitnessGoals() => (super.noSuchMethod(
        Invocation.method(
          #deleteFitnessGoals,
          [],
        ),
        returnValue: _i4.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #deleteFitnessGoals,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Result<void>>);

  @override
  _i4.Future<_i2.Result<List<_i8.WaterIntake>>> getWaterIntakesByDate(
          DateTime? date) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWaterIntakesByDate,
          [date],
        ),
        returnValue: _i4.Future<_i2.Result<List<_i8.WaterIntake>>>.value(
            _FakeResult_0<List<_i8.WaterIntake>>(
          this,
          Invocation.method(
            #getWaterIntakesByDate,
            [date],
          ),
        )),
      ) as _i4.Future<_i2.Result<List<_i8.WaterIntake>>>);

  @override
  _i4.Future<_i2.Result<_i8.WaterIntake>> saveWaterIntake(
          _i8.WaterIntake? intake) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWaterIntake,
          [intake],
        ),
        returnValue: _i4.Future<_i2.Result<_i8.WaterIntake>>.value(
            _FakeResult_0<_i8.WaterIntake>(
          this,
          Invocation.method(
            #saveWaterIntake,
            [intake],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i8.WaterIntake>>);

  @override
  _i4.Future<_i2.Result<void>> deleteWaterIntake(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteWaterIntake,
          [id],
        ),
        returnValue: _i4.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #deleteWaterIntake,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Result<void>>);

  @override
  _i4.Future<_i2.Result<_i8.DailyWaterIntake>> getDailyWaterIntake(
    DateTime? date,
    int? goal,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDailyWaterIntake,
          [
            date,
            goal,
          ],
        ),
        returnValue: _i4.Future<_i2.Result<_i8.DailyWaterIntake>>.value(
            _FakeResult_0<_i8.DailyWaterIntake>(
          this,
          Invocation.method(
            #getDailyWaterIntake,
            [
              date,
              goal,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i8.DailyWaterIntake>>);

  @override
  _i4.Future<_i2.Result<Map<String, dynamic>>> getWorkoutStats() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWorkoutStats,
          [],
        ),
        returnValue: _i4.Future<_i2.Result<Map<String, dynamic>>>.value(
            _FakeResult_0<Map<String, dynamic>>(
          this,
          Invocation.method(
            #getWorkoutStats,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Result<Map<String, dynamic>>>);

  @override
  _i4.Future<_i2.Result<List<Map<String, dynamic>>>> getWeeklyProgress() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWeeklyProgress,
          [],
        ),
        returnValue: _i4.Future<_i2.Result<List<Map<String, dynamic>>>>.value(
            _FakeResult_0<List<Map<String, dynamic>>>(
          this,
          Invocation.method(
            #getWeeklyProgress,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Result<List<Map<String, dynamic>>>>);

  @override
  _i4.Future<_i2.Result<int>> getCurrentStreak() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentStreak,
          [],
        ),
        returnValue: _i4.Future<_i2.Result<int>>.value(_FakeResult_0<int>(
          this,
          Invocation.method(
            #getCurrentStreak,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Result<int>>);
}
